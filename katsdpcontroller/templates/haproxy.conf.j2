global
    maxconn 256
    # Workaround for haproxy apparently leaking file handles to
    # /dev/random and /dev/urandom. Remove if that gets fixed.
    ulimit-n 1048576

defaults
    mode http
    timeout connect 5s
    timeout client 50s
    timeout server 50s

frontend http-in
    bind {{ haproxy_bind[0] or '*' }}:{{ haproxy_bind[1] }}
    acl missing_slash path_reg '^/gui/[^/]+/[^/]+/[^/]+$'
    acl has_gui path_reg '^/gui/[^/]+/[^/]+/[^/]+/'
    http-request redirect code 301 prefix / drop-query append-slash if missing_slash
    http-request set-var(req.product) path,field(3,/) if has_gui
    http-request set-var(req.service) path,field(4,/) if has_gui
    http-request set-var(req.label) path,field(5,/) if has_gui
    use_backend %[var(req.product)]:%[var(req.service)]:%[var(req.label)] if has_gui
    default_backend fallback

backend fallback
    server fallback_html_server 127.0.0.1:{{ internal_port }}

{% for product_name, product in guis.products.items() %}
{% for gui in product %}
backend {{ product_name }}:{{ gui.service or 'product' }}:{{ gui.label }}
{% if not gui.orig_href.path.startswith('/gui/' + product_name + '/' + gui.service + '/' + gui.label) %}
    http-request set-path {{ gui.orig_href.path }}%[path,regsub(^/gui/.*?/.*?/.*?/,)]
{% endif %}
    server {{ product_name }}:{{ gui.service }}:{{ gui.label }}:server {{ gui.orig_href.host }}:{{ gui.orig_href.port }}
{% endfor %}
{% endfor %}
