description "start sdp master controller in a screen session"

start on started docker and stopped rc RUNLEVEL=[2345]
stop on runlevel [!2345]

setuid kat
setgid kat

pre-start script
 DEFAULT_GW=$(ip route show default | awk '/default/ {print $3}')
 echo "Checking route to default gw $DEFAULT_GW"
 if ! ping -q -c 1 $DEFAULT_GW; then
  echo "Sleeping 30 seconds to wait for route to settle"
  sleep 30
 fi
end script

script
 if ! [ -r /var/kat/sdp_image_tag ]; then
  echo "cannot read /var/kat/sdp_image_tag" 1>&2
  exit 1
 fi
 TAG=`cat /var/kat/sdp_image_tag`
 docker run --net=host -v /var/kat:/var/kat \
    "sdp-docker-registry.kat.ac.za:5000/katsdpcontroller:$TAG" sdp_master_controller.py -p 5001 \
    --graph-override=array_2_bc856M32k:c856M32k \
    --graph-override=array_2_bc856M4k:c856M4k \
    --graph-override=array_3_bc856M32k:bec856M32kram \
    --graph-override=array_3_bc856M4k:bec856M4kram \
    --graph-override=array_4_bc856M32k:bec856M32kssd \
    --graph-override=array_4_bc856M4k:bec856M4kssd \
    --image-tag-file=/var/kat/sdp_image_tag
end script

pre-stop script
 echo "Stopping master controller. This may take up to 10 seconds..."
 sudo /usr/bin/pkill --signal=SIGTERM -f "/sbin/tini -- sdp_master_controller.py"
  # the actual master controller is inside docker inside screen
  # so we need to give it the SIGTERM directly to trigger a 
  # gracefull shutdown. Make sure the kat user has passwordless sudo permissions for /usr/bin/pkill
 sleep 10
  # make sure we close files etc...
end script
